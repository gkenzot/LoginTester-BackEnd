# Configurações de banco de dados (otimizado para baixo consumo de memória)
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.auto-commit=false

# Configurações de performance e memória
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.default_batch_fetch_size=25
spring.jpa.properties.hibernate.max_fetch_depth=2
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=2048
spring.jpa.properties.hibernate.generate_statistics=false

# Cache configurations
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Configurações do Tomcat para baixo consumo de memória
server.tomcat.threads.max=10
server.tomcat.threads.min-spare=2
server.tomcat.max-connections=50
server.tomcat.accept-count=10
server.tomcat.max-swallow-size=2MB
server.tomcat.max-http-form-post-size=2MB

# Configurações gerais para economia de recursos
spring.main.lazy-initialization=true
spring.main.allow-circular-references=false
spring.main.banner-mode=off
server.servlet.session.timeout=30m
spring.session.timeout=30m

# Configurações de log reduzidas
logging.level.root=WARN
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.com.zaxxer.hikari=WARN
logging.pattern.console=%d{HH:mm:ss} %-5level %logger{36} - %msg%n

# Desabilitar recursos não utilizados
spring.jmx.enabled=false
spring.devtools.restart.enabled=false
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true